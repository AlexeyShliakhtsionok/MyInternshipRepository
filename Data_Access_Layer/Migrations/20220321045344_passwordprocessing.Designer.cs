// <auto-generated />
using System;
using Data_Access_Layer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data_Access_Layer.Migrations
{
    [DbContext(typeof(SalonDBContext))]
    [Migration("20220321045344_passwordprocessing")]
    partial class passwordprocessing
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Data_Access_Layer.Entities.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("Password")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProcedureTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Qualification")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("ProcedureTypeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 3, 21, 7, 53, 44, 368, DateTimeKind.Local).AddTicks(2888));

                    b.Property<string>("FeedbackText")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FeedbackTitle")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("IsVerify")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("FeedbackId");

                    b.HasIndex("ClientId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.Material", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialId"), 1L, 1);

                    b.Property<DateTime>("BestBeforeDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("MaterialAmount")
                        .HasColumnType("float");

                    b.Property<int>("MaterialManufacturerManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MaterialId");

                    b.HasIndex("MaterialManufacturerManufacturerId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.MaterialManufacturer", b =>
                {
                    b.Property<int>("ManufacturerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManufacturerId"), 1L, 1);

                    b.Property<string>("MadeIn")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ManufacturerName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ManufacturerId");

                    b.ToTable("MaterialManufacturers");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.MediaFile", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FileId"), 1L, 1);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<byte[]>("FileData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEmployeePhoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsProfilePhoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsPromoPhoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("FileId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("MediaFiles");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<bool>("CreatedByClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("DateOfService")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("ProcedureId")
                        .HasColumnType("int");

                    b.Property<bool>("ProcessedByAdmimistrator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("OrderId");

                    b.HasIndex("ClientId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProcedureId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.Procedure", b =>
                {
                    b.Property<int>("ProcedureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcedureId"), 1L, 1);

                    b.Property<string>("ProcedureDescription")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ProcedureName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<float>("ProcedurePrice")
                        .HasColumnType("real");

                    b.Property<int>("ProcedureTypeId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("TimeAmount")
                        .HasColumnType("time");

                    b.HasKey("ProcedureId");

                    b.HasIndex("ProcedureTypeId");

                    b.ToTable("Procedures");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.ProcedureType", b =>
                {
                    b.Property<int>("ProcedureTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcedureTypeId"), 1L, 1);

                    b.Property<int?>("MediaFileFileId")
                        .HasColumnType("int");

                    b.Property<string>("ProcedureTypeName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("ProcedureTypeId");

                    b.HasIndex("MediaFileFileId");

                    b.ToTable("ProcedureTypes");
                });

            modelBuilder.Entity("MaterialProcedure", b =>
                {
                    b.Property<int>("MaterialsMaterialId")
                        .HasColumnType("int");

                    b.Property<int>("ProceduresProcedureId")
                        .HasColumnType("int");

                    b.HasKey("MaterialsMaterialId", "ProceduresProcedureId");

                    b.HasIndex("ProceduresProcedureId");

                    b.ToTable("MaterialProcedure");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.Employee", b =>
                {
                    b.HasOne("Data_Access_Layer.Entities.ProcedureType", "ProcedureType")
                        .WithMany("Employees")
                        .HasForeignKey("ProcedureTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProcedureType");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.Feedback", b =>
                {
                    b.HasOne("Data_Access_Layer.Entities.Client", "Client")
                        .WithMany("Feedbacks")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.Material", b =>
                {
                    b.HasOne("Data_Access_Layer.Entities.MaterialManufacturer", "MaterialManufacturer")
                        .WithMany("Materials")
                        .HasForeignKey("MaterialManufacturerManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialManufacturer");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.MediaFile", b =>
                {
                    b.HasOne("Data_Access_Layer.Entities.Employee", "Employee")
                        .WithMany("MediaFiles")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.Order", b =>
                {
                    b.HasOne("Data_Access_Layer.Entities.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Access_Layer.Entities.Employee", "Employee")
                        .WithMany("Orders")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Access_Layer.Entities.Procedure", "Procedure")
                        .WithMany()
                        .HasForeignKey("ProcedureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Employee");

                    b.Navigation("Procedure");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.Procedure", b =>
                {
                    b.HasOne("Data_Access_Layer.Entities.ProcedureType", "ProcedureType")
                        .WithMany("Procedures")
                        .HasForeignKey("ProcedureTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProcedureType");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.ProcedureType", b =>
                {
                    b.HasOne("Data_Access_Layer.Entities.MediaFile", "MediaFile")
                        .WithMany()
                        .HasForeignKey("MediaFileFileId");

                    b.Navigation("MediaFile");
                });

            modelBuilder.Entity("MaterialProcedure", b =>
                {
                    b.HasOne("Data_Access_Layer.Entities.Material", null)
                        .WithMany()
                        .HasForeignKey("MaterialsMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Access_Layer.Entities.Procedure", null)
                        .WithMany()
                        .HasForeignKey("ProceduresProcedureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.Client", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.Employee", b =>
                {
                    b.Navigation("MediaFiles");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.MaterialManufacturer", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.ProcedureType", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Procedures");
                });
#pragma warning restore 612, 618
        }
    }
}
